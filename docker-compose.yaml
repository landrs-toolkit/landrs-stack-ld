version: '3.7'

services:
  proxy:
    image: traefik:v2.0
    command:
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --providers.docker
      - --providers.file.directory=/etc/traefik/dyn/
      - --certificatesresolvers.le.acme.email=admin@example.com
      - --certificatesresolvers.le.acme.storage=/data/acme.json
      - --certificatesresolvers.le.acme.tlschallenge=true
    # Comment out labels block below for local dev
    # labels:
    #   - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
    #   - "traefik.http.routers.redirs.rule=hostregexp(`{host:.+}`)"
    #   - "traefik.http.routers.redirs.entrypoints=web"
    #   - "traefik.http.routers.redirs.middlewares=redirect-to-https"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config:/etc/traefik
      - /var/run/docker.sock:/var/run/docker.sock
      - traefik_vol:/data
    networks:
      landrs:
        aliases:
          - ld.landrs.org

  trifid:
    image: landrs/trifid
    build: ../trifid
    labels:
      - traefik.http.routers.trifid.rule=Host(`ld.landrs.org`)
      - traefik.http.routers.trifid.priority=1
      # Comment out lines below for local dev
      # - traefik.http.routers.trifid.tls=true
      # - traefik.http.routers.trifid.tls.certresolver=le
    networks:
      - landrs

  # docs:
  #   image: landrs/docs
  #   build: ../docs
  #   labels:
  #     - traefik.http.routers.docs.rule=(Host(`ld.landrs.org`) && PathPrefix(`/docs`))
  #     - traefik.http.routers.docs.priority=2
  #     - traefik.http.services.docs.loadbalancer.server.port=80
  #     - traefik.http.middlewares.strip-prefix.chain.middlewares=strip-prefix-1,strip-prefix-2
  #     - traefik.http.middlewares.strip-prefix-1.redirectregex.regex=^(https?://[^/]+/[a-z0-9_]+)$$
  #     - traefik.http.middlewares.strip-prefix-1.redirectregex.replacement=$${1}/
  #     - traefik.http.middlewares.strip-prefix-1.redirectregex.permanent=true
  #     - traefik.http.middlewares.strip-prefix-2.stripprefixregex.regex=/[a-z0-9_]+
  #     - traefik.http.routers.docs.middlewares=strip-prefix
  #     # Comment out lines below for local dev
  #     # - traefik.http.routers.docs.tls=true
  #     # - traefik.http.routers.docs.tls.certresolver=le
  #   networks:
  #     - landrs


  fuseki-geosparql:
    image: landrs/fuseki-geosparql
    build: ../fuseki
    command: -l false -i -dg -v -u -rf "/base.ttl>ttl"
    volumes:
      - geosparql_vol:/jena-fuseki
    labels:
      - traefik.http.services.trifid.loadbalancer.server.port=3030
      - traefik.http.routers.trifid-query.rule=(Host(`ld.landrs.org`) && Path(`/query`))
      - traefik.http.routers.trifid-query.service=trifid@docker
      - traefik.http.routers.trifid-query.priority=2
      - traefik.http.middlewares.trifid-query.replacepath.path=/ds
      - traefik.http.routers.trifid-query.middlewares=trifid-query
      - traefik.http.routers.trifid-update.rule=(Host(`ld.landrs.org`) && Path(`/update`))
      - traefik.http.routers.trifid-update.service=trifid@docker
      - traefik.http.routers.trifid-update.priority=3
      - traefik.http.middlewares.trifid-update.replacepath.path=/ds/update
      - traefik.http.middlewares.trifid-update-auth.basicauth.users=admin:$$2y$$10$$qT00E87LP6o15pUSFNnirusP.DxUhpxE8lPBrxOgQMq7c9flvd.Vm
      - traefik.http.routers.trifid-update.middlewares=trifid-update,trifid-update-auth
      # Comment out lines below for local dev
      # - traefik.http.routers.trifid-query.tls=true
      # - traefik.http.routers.trifid-query.tls.certresolver=le
      # - traefik.http.routers.trifid-update.tls=true
      # - traefik.http.routers.trifid-update.tls.certresolver=le
    networks:
      - landrs

  demo:
    image: landrs/demo
    build:
      context: ../demo
      target: develop-stage
      args:
        - VUE_APP_AXIOS_BASE_URL=http://ld.landrs.org/${QUERIES_PATH:-ejs}
    environment:
      - VUE_APP_AXIOS_BASE_URL=http://ld.landrs.org/${QUERIES_PATH:-ejs}
    command: npm run serve
    volumes:
      - '../demo:/app'
      - '/app/node_modules'
    expose:
      - 8080
    labels:
      - traefik.http.services.demo.loadbalancer.server.port=8080
      - traefik.http.routers.demo.rule=(Host(`ld.landrs.org`) && PathPrefix(`/demo`))
    #      - traefik.http.middlewares.demo-prefix.stripprefix.prefixes=/demo
    #      - traefik.http.routers.demo.middlewares=demo-prefix
    networks:
      - landrs

  queries:
    image: landrs/queries
    build: ../queries
    environment:
      - SPARQL_USERNAME=${SPARQL_USERNAME}
      - SPARQL_PASSWORD=${SPARQL_PASSWORD}
    expose:
      - 3000
    labels:
      - traefik.http.services.queries.loadbalancer.server.port=3000
      - traefik.http.routers.queries.rule=(Host(`ld.landrs.org`) && PathPrefix(`/${QUERIES_PATH:-ejs}`))
      - traefik.http.middlewares.queries-prefix.stripprefix.prefixes=/${QUERIES_PATH:-ejs}
      - traefik.http.routers.queries.middlewares=queries-prefix
    networks:
      - landrs

volumes:
  geosparql_vol:
  traefik_vol:

networks:
  landrs:
    driver: bridge